BasisDirectory[g2] = StringDrop[DirectoryName[$Input], -1]
g2 /: BasisSectors[g2] := {js[g2, 1, 1, 0, 1, 0], js[g2, 1, 1, 0, 1, 1], 
   js[g2, 1, 1, 1, 1, 0]}
g2 /: CurrentState[g2] := <|NewDsBasis -> True, GenerateIBP -> True, 
   AnalyzeSectors -> True, FindSymmetries -> False|>
g2 /: CutDs[g2] := {1, 1, 0, 1, 0}
g2 /: Definitions[g2] := {Hold[MetricTensor[] === d, SetDim[d]], 
   Hold[VecQ[l1], Declare[l1, Vector]], Hold[VecQ[p3], Declare[p3, Vector]], 
   Hold[VecQ[q1], Declare[q1, Vector]], Hold[VecQ[v1], Declare[v1, Vector]], 
   Hold[VecQ[v2], Declare[v2, Vector]], Hold[TypeOf[p3] === Vector, 
    Declare[p3, Vector]], Hold[TypeOf[q1] === Vector, Declare[q1, Vector]], 
   Hold[TypeOf[q11] === Number, Declare[q11, Number]], 
   Hold[TypeOf[q1p3] === Number, Declare[q1p3, Number]], 
   Hold[TypeOf[v1] === Vector, Declare[v1, Vector]], 
   Hold[TypeOf[v2] === Vector, Declare[v2, Vector]], 
   Hold[TypeOf[x1] === Number, Declare[x1, Number]], 
   Hold[TypeOf[x2] === Number, Declare[x2, Number]], 
   Hold[TypeOf[y] === Number, Declare[y, Number]], 
   Hold[sp[p3, p3] === 0, sp[p3, p3] = 0], Hold[sp[q1, q1] === q11, 
    sp[q1, q1] = q11], Hold[sp[v1, v1] === 1, sp[v1, v1] = 1], 
   Hold[sp[v2, v2] === 1, sp[v2, v2] = 1], Hold[sp[p3, q1] === q1p3, 
    sp[p3, q1] = q1p3], Hold[sp[p3, v1] === x1, sp[p3, v1] = x1], 
   Hold[sp[p3, v2] === x2, sp[p3, v2] = x2], Hold[sp[q1, v1] === 0, 
    sp[q1, v1] = 0], Hold[sp[q1, v2] === x2, sp[q1, v2] = x2], 
   Hold[sp[v1, v2] === y, sp[v1, v2] = y]}
g2 /: Ds[g2] := {sp[l1, l1], sp[l1, v1], sp[l1, v2], 
   q11 + sp[l1, l1] + 2*sp[l1, q1], -2*(q1p3 + sp[l1, p3])}
g2 /: DsBasisQ[g2] := True
g2 /: EMs[g2] := {p3, q1, v1, v2}
g2 /: ExtMappedSectors[g2] := {}
g2 /: ExtSectorsMappings[g2] := {}
g2 /: IBP[g2] := {-(#4*j[g2, -1 + #1, #2, #3, 1 + #4, #5]) + 
     (d - 2*#1 - #2 - #3 - #4 - #5)*j[g2, #1, #2, #3, #4, #5] - 
     2*#5*q1p3*j[g2, #1, #2, #3, #4, 1 + #5] + 
     #4*q11*j[g2, #1, #2, #3, 1 + #4, #5], 
    #4*j[g2, #1, #2, #3, 1 + #4, -1 + #5] - 
     #3*x2*j[g2, #1, #2, 1 + #3, #4, #5] - 
     #2*x1*j[g2, #1, 1 + #2, #3, #4, #5] + 
     #1*j[g2, 1 + #1, #2, #3, #4, -1 + #5] + 
     2*#1*q1p3*j[g2, 1 + #1, #2, #3, #4, #5], 
    #4*j[g2, -1 + #1, #2, #3, 1 + #4, #5] + 
     (#1 - #4)*j[g2, #1, #2, #3, #4, #5] + 
     2*#5*q1p3*j[g2, #1, #2, #3, #4, 1 + #5] - 
     #4*q11*j[g2, #1, #2, #3, 1 + #4, #5] - 
     #3*x2*j[g2, #1, #2, 1 + #3, #4, #5] - 
     #1*j[g2, 1 + #1, #2, #3, -1 + #4, #5] + 
     #1*q11*j[g2, 1 + #1, #2, #3, #4, #5], 
    -2*#4*j[g2, #1, -1 + #2, #3, 1 + #4, #5] + 
     2*#5*x1*j[g2, #1, #2, #3, #4, 1 + #5] - 
     #3*y*j[g2, #1, #2, 1 + #3, #4, #5] - #2*j[g2, #1, 1 + #2, #3, #4, #5] - 
     2*#1*j[g2, 1 + #1, -1 + #2, #3, #4, #5], 
    -2*#4*j[g2, #1, #2, -1 + #3, 1 + #4, #5] + 
     2*#5*x2*j[g2, #1, #2, #3, #4, 1 + #5] - 
     2*#4*x2*j[g2, #1, #2, #3, 1 + #4, #5] - 
     #3*j[g2, #1, #2, 1 + #3, #4, #5] - #2*y*j[g2, #1, 1 + #2, #3, #4, #5] - 
     2*#1*j[g2, 1 + #1, #2, -1 + #3, #4, #5]} & 
g2 /: Information[g2] := (If[ValueQ[g2::usage], 
    Information[g2, LongForm -> False]]; 
   Print[Grid[Partition[Union[Replace[Replace[First /@ UpValues[g2] /. 
          HoldPattern -> HoldForm, 
         {HoldPattern[HoldForm[(LiteRed`Private`f$_)[g2, __]]] :> 
           HoldForm[LiteRed`Private`f$[g2, "\[Ellipsis]"]]}, {1}], 
        {HoldPattern[LiteRed`Private`x$:HoldForm[(LiteRed`Private`f$_)[g2, 
              ___]]] :> Button[LiteRed`Private`x$, 
           (SelectionMove[ButtonNotebook[], All, GeneratedCell]; 
             NotebookDelete[]; Information[Evaluate[LiteRed`Private`x$[[1,
                0]]], LongForm -> False]; Print[TableForm[Cases[UpValues[g2], 
                 HoldPattern[LiteRed`Private`a$_ :> LiteRed`Private`b$_] /; 
                  MatchQ[LiteRed`Private`a$[[1,0]], LiteRed`Private`x$[[1,
                    0]]]] /. HoldPattern -> HoldForm]]) & , 
           Appearance -> "Frameless", BaseStyle -> "InformationLink"]}, 
        {1}]], 5], DefaultBaseStyle -> "InfoGrid"]])
g2 /: jRules[g2, 1, 1, 0, 1, 0] := Get[StringJoin[BasisDirectory[g2], 
    "/jRules[g2, 1, 1, 0, 1, 0]"]]
g2 /: jRules[g2, 1, 1, 0, 1, 1] := Get[StringJoin[BasisDirectory[g2], 
    "/jRules[g2, 1, 1, 0, 1, 1]"]]
g2 /: jRules[g2, 1, 1, 1, 1, 0] := Get[StringJoin[BasisDirectory[g2], 
    "/jRules[g2, 1, 1, 1, 1, 0]"]]
g2 /: jRules[g2, 1, 1, 1, 1, 1] := Get[StringJoin[BasisDirectory[g2], 
    "/jRules[g2, 1, 1, 1, 1, 1]"]]
g2 /: jsOrder[g2] := {"np", "cp", "-ds", "-ns"}
g2 /: jsOrder[g2, 0, 1, 0, 1, 0] := {{-1, 1, -1, 1, -1}, {-1, 0, -1, 0, -1}, 
   {0, -1, 0, 0, 0}, {1, 0, 0, 0, 0}, {0, 0, 1, 0, 0}}
g2 /: jsOrder[g2, 0, 1, 0, 1, 1] := {{-1, 1, -1, 1, 1}, {-1, 0, -1, 0, 0}, 
   {0, 1, 0, 1, 0}, {0, -1, 0, 0, 0}, {1, 0, 0, 0, 0}}
g2 /: jsOrder[g2, 0, 1, 1, 1, 0] := {{-1, 1, 1, 1, -1}, {-1, 0, 0, 0, -1}, 
   {0, 1, 0, 1, 0}, {0, -1, 0, 0, 0}, {1, 0, 0, 0, 0}}
g2 /: jsOrder[g2, 0, 1, 1, 1, 1] := {{-1, 1, 1, 1, 1}, {-1, 0, 0, 0, 0}, 
   {0, 1, 0, 1, 0}, {0, -1, 0, 0, 0}, {0, 0, -1, 0, 0}}
g2 /: jsOrder[g2, 1, 0, 0, 1, 0] := {{1, -1, -1, 1, -1}, {0, -1, -1, 0, -1}, 
   {-1, 0, 0, 0, 0}, {0, 1, 0, 0, 0}, {0, 0, 1, 0, 0}}
g2 /: jsOrder[g2, 1, 0, 0, 1, 1] := {{1, -1, -1, 1, 1}, {0, -1, -1, 0, 0}, 
   {1, 0, 0, 1, 0}, {-1, 0, 0, 0, 0}, {0, 1, 0, 0, 0}}
g2 /: jsOrder[g2, 1, 0, 1, 1, 0] := {{1, -1, 1, 1, -1}, {0, -1, 0, 0, -1}, 
   {1, 0, 0, 1, 0}, {-1, 0, 0, 0, 0}, {0, 1, 0, 0, 0}}
g2 /: jsOrder[g2, 1, 0, 1, 1, 1] := {{1, -1, 1, 1, 1}, {0, -1, 0, 0, 0}, 
   {1, 0, 0, 1, 0}, {-1, 0, 0, 0, 0}, {0, 0, -1, 0, 0}}
g2 /: jsOrder[g2, 1, 1, 0, 0, 0] := {{1, 1, -1, -1, -1}, {0, 0, -1, -1, -1}, 
   {-1, 0, 0, 0, 0}, {0, 0, 1, 0, 0}, {0, 0, 0, 1, 0}}
g2 /: jsOrder[g2, 1, 1, 0, 0, 1] := {{1, 1, -1, -1, 1}, {0, 0, -1, -1, 0}, 
   {1, 1, 0, 0, 0}, {-1, 0, 0, 0, 0}, {0, 0, 1, 0, 0}}
g2 /: jsOrder[g2, 1, 1, 0, 1, 0] := {{1, 1, -1, 1, -1}, {0, 0, -1, 0, -1}, 
   {-1, 0, 0, 0, 0}, {0, -1, 0, 0, 0}, {0, 0, 1, 0, 0}}
g2 /: jsOrder[g2, 1, 1, 0, 1, 1] := {{1, 1, -1, 1, 1}, {0, 0, -1, 0, 0}, 
   {1, 1, 0, 1, 0}, {-1, 0, 0, 0, 0}, {0, -1, 0, 0, 0}}
g2 /: jsOrder[g2, 1, 1, 1, 0, 0] := {{1, 1, 1, -1, -1}, {0, 0, 0, -1, -1}, 
   {1, 1, 0, 0, 0}, {-1, 0, 0, 0, 0}, {0, 0, 0, 1, 0}}
g2 /: jsOrder[g2, 1, 1, 1, 0, 1] := {{1, 1, 1, -1, 1}, {0, 0, 0, -1, 0}, 
   {1, 1, 0, 0, 0}, {-1, 0, 0, 0, 0}, {0, 0, -1, 0, 0}}
g2 /: jsOrder[g2, 1, 1, 1, 1, 0] := {{1, 1, 1, 1, -1}, {0, 0, 0, 0, -1}, 
   {1, 1, 0, 1, 0}, {-1, 0, 0, 0, 0}, {0, -1, 0, 0, 0}}
g2 /: jsOrder[g2, 1, 1, 1, 1, 1] := {{1, 1, 1, 1, 1}, {1, 1, 0, 1, 0}, 
   {-1, 0, 0, 0, 0}, {0, -1, 0, 0, 0}, {0, 0, -1, 0, 0}}
g2 /: jSymmetries[g2, 1, 1, 0, 1, 0] := 
  {{j[g2, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?Positive, 
      (n5_)?NonPositive] :> Expand[j[g2, n1, n2, n3, n4, n5]]}}
g2 /: jSymmetries[g2, 1, 1, 0, 1, 1] := 
  {{j[g2, (n1_)?Positive, (n2_)?Positive, (n3_)?NonPositive, (n4_)?Positive, 
      (n5_)?Positive] :> Expand[j[g2, n1, n2, n3, n4, n5]]}}
g2 /: jSymmetries[g2, 1, 1, 1, 1, 0] := 
  {{j[g2, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, (n4_)?Positive, 
      (n5_)?NonPositive] :> Expand[j[g2, n1, n2, n3, n4, n5]]}}
g2 /: jSymmetries[g2, 1, 1, 1, 1, 1] := 
  {{j[g2, (n1_)?Positive, (n2_)?Positive, (n3_)?Positive, (n4_)?Positive, 
      (n5_)?Positive] :> Expand[j[g2, n1, n2, n3, n4, n5]]}}
g2 /: LI[g2] := {#4*q1p3*j[g2, -1 + #1, #2, #3, 1 + #4, #5] + 
     (#3*x2*j[g2, -1 + #1, #2, 1 + #3, #4, #5])/2 + 
     (#2*x1*j[g2, -1 + #1, 1 + #2, #3, #4, #5])/2 - 
     (#4 - #5)*q1p3*j[g2, #1, #2, #3, #4, #5] + 
     2*#5*q1p3^2*j[g2, #1, #2, #3, #4, 1 + #5] - 
     #4*q11*j[g2, #1, #2, #3, 1 + #4, -1 + #5] - 
     #4*q11*q1p3*j[g2, #1, #2, #3, 1 + #4, #5] - 
     (#3*x2*j[g2, #1, #2, 1 + #3, -1 + #4, #5])/2 - 
     (#3*x2*j[g2, #1, #2, 1 + #3, #4, -1 + #5])/2 + 
     (#3*(q11 - 2*q1p3)*x2*j[g2, #1, #2, 1 + #3, #4, #5])/2 - 
     (#2*x1*j[g2, #1, 1 + #2, #3, -1 + #4, #5])/2 + 
     (#2*q11*x1*j[g2, #1, 1 + #2, #3, #4, #5])/2, 
    -2*#4*q1p3*j[g2, #1, -1 + #2, #3, 1 + #4, #5] - 
     #3*x2*j[g2, #1, -1 + #2, 1 + #3, #4, #5] - 
     (#2 - #5)*x1*j[g2, #1, #2, #3, #4, #5] + 
     2*#5*q1p3*x1*j[g2, #1, #2, #3, #4, 1 + #5] - 
     (#3*y*j[g2, #1, #2, 1 + #3, #4, -1 + #5])/2 - 
     #3*q1p3*y*j[g2, #1, #2, 1 + #3, #4, #5] - 
     (#2*j[g2, #1, 1 + #2, #3, #4, -1 + #5])/2 - 
     #2*q1p3*j[g2, #1, 1 + #2, #3, #4, #5], 
    -2*#4*q1p3*j[g2, #1, #2, -1 + #3, 1 + #4, #5] - 
     (#3 - #5)*x2*j[g2, #1, #2, #3, #4, #5] + 
     2*#5*q1p3*x2*j[g2, #1, #2, #3, #4, 1 + #5] - 
     #4*x2*j[g2, #1, #2, #3, 1 + #4, -1 + #5] - 
     2*#4*q1p3*x2*j[g2, #1, #2, #3, 1 + #4, #5] - 
     (#3*j[g2, #1, #2, 1 + #3, #4, -1 + #5])/2 - 
     #3*q1p3*j[g2, #1, #2, 1 + #3, #4, #5] - 
     #2*x1*j[g2, #1, 1 + #2, -1 + #3, #4, #5] - 
     (#2*y*j[g2, #1, 1 + #2, #3, #4, -1 + #5])/2 - 
     #2*q1p3*y*j[g2, #1, 1 + #2, #3, #4, #5], 
    #5*x1*j[g2, -1 + #1, #2, #3, #4, 1 + #5] - 
     (#3*y*j[g2, -1 + #1, #2, 1 + #3, #4, #5])/2 - 
     (#2*j[g2, -1 + #1, 1 + #2, #3, #4, #5])/2 + 
     2*#5*q1p3*j[g2, #1, -1 + #2, #3, #4, 1 + #5] - 
     2*#4*q11*j[g2, #1, -1 + #2, #3, 1 + #4, #5] - 
     #3*x2*j[g2, #1, -1 + #2, 1 + #3, #4, #5] - 
     #5*x1*j[g2, #1, #2, #3, -1 + #4, 1 + #5] + 
     #5*q11*x1*j[g2, #1, #2, #3, #4, 1 + #5] + 
     (#3*y*j[g2, #1, #2, 1 + #3, -1 + #4, #5])/2 - 
     (#3*q11*y*j[g2, #1, #2, 1 + #3, #4, #5])/2 + 
     (#2*j[g2, #1, 1 + #2, #3, -1 + #4, #5])/2 - 
     (#2*q11*j[g2, #1, 1 + #2, #3, #4, #5])/2, 
    #5*x2*j[g2, -1 + #1, #2, #3, #4, 1 + #5] - 
     #4*x2*j[g2, -1 + #1, #2, #3, 1 + #4, #5] - 
     (#3*j[g2, -1 + #1, #2, 1 + #3, #4, #5])/2 - 
     (#2*y*j[g2, -1 + #1, 1 + #2, #3, #4, #5])/2 + 
     2*#5*q1p3*j[g2, #1, #2, -1 + #3, #4, 1 + #5] - 
     2*#4*q11*j[g2, #1, #2, -1 + #3, 1 + #4, #5] - 
     #5*x2*j[g2, #1, #2, #3, -1 + #4, 1 + #5] - 
     (#3 - #4)*x2*j[g2, #1, #2, #3, #4, #5] + 
     #5*q11*x2*j[g2, #1, #2, #3, #4, 1 + #5] - 
     #4*q11*x2*j[g2, #1, #2, #3, 1 + #4, #5] + 
     (#3*j[g2, #1, #2, 1 + #3, -1 + #4, #5])/2 - 
     (#3*q11*j[g2, #1, #2, 1 + #3, #4, #5])/2 + 
     (#2*y*j[g2, #1, 1 + #2, #3, -1 + #4, #5])/2 - 
     (#2*q11*y*j[g2, #1, 1 + #2, #3, #4, #5])/2, 
    -2*#5*x2*j[g2, #1, -1 + #2, #3, #4, 1 + #5] + 
     2*#4*x2*j[g2, #1, -1 + #2, #3, 1 + #4, #5] + 
     #3*j[g2, #1, -1 + #2, 1 + #3, #4, #5] + 
     2*#5*x1*j[g2, #1, #2, -1 + #3, #4, 1 + #5] + 
     (#2 - #3)*y*j[g2, #1, #2, #3, #4, #5] - 
     #2*j[g2, #1, 1 + #2, -1 + #3, #4, #5]} & 
g2 /: LMs[g2] := {l1}
g2 /: MappedSectors[g2] := {}
g2 /: MIs[g2] := {j[g2, 1, 1, 0, 1, 0], j[g2, 1, 1, 0, 1, 1], 
   j[g2, 1, 1, 1, 1, 0], j[g2, 1, 1, 1, 1, 1]}
g2 /: NDs[g2] := 5
g2 /: NonZeroSectors[g2] := {js[g2, 1, 1, 0, 1, 0], js[g2, 1, 1, 0, 1, 1], 
   js[g2, 1, 1, 1, 1, 0], js[g2, 1, 1, 1, 1, 1]}
g2 /: Parameters[g2] := {d, q11, q1p3, x1, x2, y}
g2 /: PowerShifts[g2] := {0, 0, 0, 0, 0}
g2 /: SectorsMappings[g2] := {}
g2 /: SectorsPattern[g2] := {___}
g2 /: SimpleSectors[g2] := {js[g2, 1, 1, 0, 1, 0]}
g2 /: SPs[g2] := {sp[l1, l1], sp[l1, p3], sp[l1, q1], sp[l1, v1], sp[l1, v2]}
g2 /: SR[g2] := Get[StringJoin[BasisDirectory[g2], "/SR[g2]"]]
g2 /: Toj[g2] := {sp[l1, l1] -> j[g2, -1, 0, 0, 0, 0], 
   sp[l1, p3] -> -q1p3 - j[g2, 0, 0, 0, 0, -1]/2, 
   sp[l1, q1] -> (-q11 - j[g2, -1, 0, 0, 0, 0] + j[g2, 0, 0, 0, -1, 0])/2, 
   sp[l1, v1] -> j[g2, 0, -1, 0, 0, 0], sp[l1, v2] -> j[g2, 0, 0, -1, 0, 0]}
g2 /: UniqueSectors[g2] := {js[g2, 1, 1, 0, 1, 0], js[g2, 1, 1, 0, 1, 1], 
   js[g2, 1, 1, 1, 1, 0], js[g2, 1, 1, 1, 1, 1]}
g2 /: ZerojRule[g2] := LiteRed`Private`jjj:j[g2, __] :> 
   0 /; Module[{LiteRed`Private`jjs = 
       Rest[List @@ jSector[LiteRed`Private`jjj]]}, 
     Or @@ (BitOr[LiteRed`Private`jjs, #1] === #1 & ) /@ 
       {{1, 1, 1, 0, 1}, {1, 0, 1, 1, 1}, {0, 1, 1, 1, 1}}]
g2 /: ZeroSectors[g2] := {js[g2, 0, 0, 0, 0, 0], js[g2, 0, 0, 0, 0, 1], 
   js[g2, 0, 0, 0, 1, 0], js[g2, 0, 0, 1, 0, 0], js[g2, 0, 1, 0, 0, 0], 
   js[g2, 1, 0, 0, 0, 0], js[g2, 0, 0, 0, 1, 1], js[g2, 0, 0, 1, 0, 1], 
   js[g2, 0, 0, 1, 1, 0], js[g2, 0, 1, 0, 0, 1], js[g2, 0, 1, 0, 1, 0], 
   js[g2, 0, 1, 1, 0, 0], js[g2, 1, 0, 0, 0, 1], js[g2, 1, 0, 0, 1, 0], 
   js[g2, 1, 0, 1, 0, 0], js[g2, 1, 1, 0, 0, 0], js[g2, 0, 0, 1, 1, 1], 
   js[g2, 0, 1, 0, 1, 1], js[g2, 0, 1, 1, 0, 1], js[g2, 0, 1, 1, 1, 0], 
   js[g2, 1, 0, 0, 1, 1], js[g2, 1, 0, 1, 0, 1], js[g2, 1, 0, 1, 1, 0], 
   js[g2, 1, 1, 0, 0, 1], js[g2, 1, 1, 1, 0, 0], js[g2, 0, 1, 1, 1, 1], 
   js[g2, 1, 0, 1, 1, 1], js[g2, 1, 1, 1, 0, 1]}
g2 /: SectorsMappings[g2, LiteRed`Private`ns$:(0 | 1)..] := 
  Cases[SectorsMappings[g2], HoldPattern[js[g2, LiteRed`Private`ns$] -> _]]
g2::usage = "1-loop basis with 4 external momenta.\nUse Information[g2] to \
get basis summary.\nThis string can be redefined by setting \
g2::usage=\"\[Ellipsis]\""; Information[g2, LongForm -> False]; 
LiteRed`Private`CheckDefs[g2]
BasisDirectory[g2]
